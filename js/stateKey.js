// Generated by CoffeeScript 1.4.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(function() {
  var KeyState;
  return KeyState = (function() {

    function KeyState(settings) {
      this.settings = settings;
      this.keyUpHandler = __bind(this.keyUpHandler, this);

      this.keyDownHandler = __bind(this.keyDownHandler, this);

      this.currentCommand = __bind(this.currentCommand, this);

      this.leftArrowDown = false;
      this.rightArrowDown = false;
      log(this.settings);
    }

    KeyState.prototype.currentCommand = function() {
      if (this.rightArrowDown) {
        return this.settings.ship.turnRatio;
      }
      if (this.leftArrowDown) {
        return -1 * this.settings.ship.turnRatio;
      }
      return 0;
    };

    KeyState.prototype.keyDownHandler = function(e) {
      var keyID;
      keyID = event[event.charCode ? 'charCode' : 'keyCode'];
      if (keyID === this.settings.screen.leftButtonCode) {
        this.leftArrowDown = true;
      }
      if (keyID === this.settings.screen.rightButtonCode) {
        return this.rightArrowDown = true;
      }
    };

    KeyState.prototype.keyUpHandler = function(e) {
      var keyID;
      keyID = event[event.charCode ? 'charCode' : 'keyCode'];
      if (keyID === this.settings.screen.leftButtonCode) {
        this.leftArrowDown = false;
      }
      if (keyID === this.settings.screen.rightButtonCode) {
        return this.rightArrowDown = false;
      }
    };

    return KeyState;

  })();
});
