// Generated by CoffeeScript 1.4.0
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

define(function() {
  var StateKey;
  return StateKey = (function() {

    function StateKey(settings) {
      this.settings = settings;
      this._generalHandler = __bind(this._generalHandler, this);

      this.keyUpHandler = __bind(this.keyUpHandler, this);

      this.keyDownHandler = __bind(this.keyDownHandler, this);

      this.isThrusting = __bind(this.isThrusting, this);

      this.currentTurnCommand = __bind(this.currentTurnCommand, this);

      this.commands = {
        left: false,
        right: false,
        thrust: false
      };
    }

    StateKey.prototype.currentTurnCommand = function() {
      if (this.commands.left && !this.commands.right) {
        return this.settings.ship.turnRatio;
      }
      if (this.commands.right && !this.commands.left) {
        return -1 * this.settings.ship.turnRatio;
      }
      return 0;
    };

    StateKey.prototype.isThrusting = function() {
      return this.commands.thrust;
    };

    StateKey.prototype.keyDownHandler = function(e) {
      return this._generalHandler(e, true);
    };

    StateKey.prototype.keyUpHandler = function(e) {
      return this._generalHandler(e, false);
    };

    StateKey.prototype._generalHandler = function(e, sense) {
      var command, keyId;
      keyId = e[e.charCode ? 'charCode' : 'keyCode'];
      command = this.settings.game.keyCommandMap[keyId];
      if (command != null) {
        return this.commands[command] = sense;
      }
    };

    return StateKey;

  })();
});
