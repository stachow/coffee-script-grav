// Generated by CoffeeScript 1.4.0

define(['rotationTranslator'], function(rotationTranslator) {
  return function(ctx, settings, state) {
    var externalPoints, point, pointSet, _i, _j, _k, _len, _len1, _len2, _ref;
    ctx.save();
    ctx.translate(state.shipState.positionX, state.shipState.positionY);
    ctx.strokeStyle = ctx.fillStyle = settings.ship.color;
    pointSet = state.shipState.livePoints();
    ctx.moveTo(pointSet[0][0], pointSet[0][1]);
    ctx.beginPath();
    for (_i = 0, _len = pointSet.length; _i < _len; _i++) {
      point = pointSet[_i];
      ctx.lineTo(point[0], point[1]);
    }
    ctx.closePath();
    ctx.stroke();
    ctx.fillStyle = settings.ship.fillColor;
    ctx.fill();
    if (state.shipState.thrusting) {
      ctx.strokeStyle = settings.ship.engineColor;
      ctx.lineWidth = 2;
      ctx.beginPath();
      _ref = state.shipState.engineRotatedPoints();
      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
        point = _ref[_j];
        ctx.lineTo(point[0], point[1]);
      }
      ctx.stroke();
    }
    ctx.fillStyle = settings.ship.color;
    ctx.fillRect(-1, -1, 2, 2);
    externalPoints = state.shipState.externalBoxPoints();
    ctx.moveTo(externalPoints[0][0], externalPoints[0][1]);
    ctx.beginPath();
    for (_k = 0, _len2 = externalPoints.length; _k < _len2; _k++) {
      point = externalPoints[_k];
      ctx.lineTo(point[0], point[1]);
    }
    ctx.lineTo(externalPoints[0][0], externalPoints[0][1]);
    ctx.stroke();
    ctx.restore();
  };
});
